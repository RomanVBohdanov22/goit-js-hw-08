{"mappings":"iiBAcA,IAAAA,EAAAC,EAAA,SACMC,EAAc,sBAWdC,EAAO,SAAAC,GACX,IACE,IAAMC,EAAkBC,aAAaC,QAAQH,GAC7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,E,CACzD,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAIzCC,EAAS,GACPC,EAAkBZ,EAAKD,GAEvBc,EAAa,CACfC,KAAMC,SAASC,cAAc,kBAC7BC,SAAUF,SAASC,cAAc,2BACjCE,MAAOH,SAASC,cAAc,0BAuBlC,WACI,GAAIhB,EAAKD,GACT,CAEI,IAAMoB,EAAanB,EAAKD,GACPqB,OAAOC,KAAKF,GAEpBG,KAAI,SAAAC,GACTR,SAASC,cAAc,UAAkBQ,OAARD,EAAQ,OAAKE,MAAQN,EAAWI,E,GAQhE,C,CApCbG,GACAb,EAAWC,KAAKa,iBAAiB,UAOjC,SAAsBC,GAClBA,EAAEC,iBACFpB,QAAQqB,IAAIlB,GACZgB,EAAEG,cAAcC,QAChB7B,aAAa8B,WAAWlC,E,IAV5Bc,EAAWC,KAAKa,iBAAiB,QAASO,EAAArC,GAAEsC,UAY5C,SAAiBP,GAGb,OADAjB,EAAOiB,EAAEQ,OAAOC,MAAQT,EAAEQ,OAAOX,MA3CxB,SAACxB,EAAKwB,GACjB,IACE,IAAMvB,EAAkBI,KAAKgC,UAAUb,GACvCtB,aAAaoC,QAAQtC,EAAKC,E,CAC1B,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,EAuClC8B,CAAKzC,EAAaY,E,GAfiC,K","sources":["src/js/03-feedback.js"],"sourcesContent":["/*\n<form class=\"feedback-form\" autocomplete=\"off\">\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" autofocus />\n  </label>\n  <label>\n    Message\n    <textarea name=\"message\" rows=\"8\"></textarea>\n  </label>\n  <button type=\"submit\">Submit</button>\n</form>\n*/\n\nimport _ from 'lodash';\nconst STORAGE_KEY = \"feedback-form-state\";\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nlet toData = {};\nconst parsedDataLocal = load(STORAGE_KEY);\n\nconst refsToForm = {\n    form: document.querySelector('.feedback-form'),\n    textarea: document.querySelector('.feedback-form textarea'),\n    email: document.querySelector('.feedback-form input'),\n};\n\nonLoadForm();\nrefsToForm.form.addEventListener('submit', onFormSubmit);\nrefsToForm.form.addEventListener('input', _.throttle(onInput, 500));\n//refsToForm.form.addEventListener('input', e =>\n//{ toData[e.target.name] = e.target.value; });\n\n\n\nfunction onFormSubmit(e) { \n    e.preventDefault();\n    console.log(parsedDataLocal);\n    e.currentTarget.reset();\n    localStorage.removeItem(STORAGE_KEY);\n}\nfunction onInput(e)\n{   \n    toData[e.target.name] = e.target.value;\n    return save(STORAGE_KEY, toData);\n}\n\nfunction onLoadForm() { \n    if (load(STORAGE_KEY))\n    {\n             \n        const outputForm = load(STORAGE_KEY);\n        const formKeys = Object.keys(outputForm);\n\n        formKeys.map(element => {\n            document.querySelector(`[name='${element}']`).value = outputForm[element];\n        });\n        //const savedForm = load(STORAGE_KEY);\n        //const formKeys = Object.keys(savedForm);\n        /*formKeys.map( element => {\n            document.querySelector(\n                `name='${element}'`\n            ).value = savedForm[element];\n        });*/\n\n        }\n}\n\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$STORAGE_KEY","$b00c40859be242c5$var$load","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","$b00c40859be242c5$var$toData","$b00c40859be242c5$var$parsedDataLocal","$b00c40859be242c5$var$refsToForm","form","document","querySelector","textarea","email","outputForm","Object","keys","map","element","concat","value","$b00c40859be242c5$var$onLoadForm","addEventListener","e","preventDefault","log","currentTarget","reset","removeItem","$parcel$interopDefault","throttle","target","name","stringify","setItem","$b00c40859be242c5$var$save"],"version":3,"file":"03-feedback.f7f15f27.js.map"}