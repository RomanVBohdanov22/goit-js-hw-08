{"mappings":"qhBAcA,IAAAA,EAAAC,EAAA,SACA,MAWMC,EAAOC,IACX,IACE,MAAMC,EAAkBC,aAAaC,QAAQH,GAC7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,E,CACzD,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAI7C,IAAIC,EAAS,GACb,MAAMC,EAAkBZ,EArBJ,uBAuBda,EAAa,CACfC,KAAMC,SAASC,cAAc,kBAC7BC,SAAUF,SAASC,cAAc,2BACjCE,MAAOH,SAASC,cAAc,0BAsBlC,WACI,GAAIhB,EAjDY,uBAkDhB,CAEI,MAAMmB,EAAanB,EApDP,uBAqDKoB,OAAOC,KAAKF,GAEpBG,KAAIC,IACTR,SAASC,cAAc,UAAUO,OAAaC,MAAQL,EAAWI,EAAQ,GAQxE,C,CAnCbE,GACAZ,EAAWC,KAAKY,iBAAiB,UAOjC,SAAsBC,GAClBA,EAAEC,iBACFnB,QAAQoB,IAAIjB,GACZe,EAAEG,cAAcC,QAChB5B,aAAa6B,WAzCG,sB,IA+BpBnB,EAAWC,KAAKY,iBAAiB,QAASO,EAAAnC,GAAEoC,UAY5C,SAAiBP,GAEb,MA3CS,EAAC1B,EAAKuB,KACjB,IACE,MAAMtB,EAAkBI,KAAK6B,UAAUX,GACvCrB,aAAaiC,QAAQnC,EAAKC,E,CAC1B,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAsClC2B,CA7CS,sBA6CS1B,E,GAdiC,MAC9DE,EAAWC,KAAKY,iBAAiB,SAASC,IACxChB,EAAOgB,EAAEW,OAAOC,MAAQZ,EAAEW,OAAOd,KAAK","sources":["src/js/03-feedback.js"],"sourcesContent":["/*\n<form class=\"feedback-form\" autocomplete=\"off\">\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" autofocus />\n  </label>\n  <label>\n    Message\n    <textarea name=\"message\" rows=\"8\"></textarea>\n  </label>\n  <button type=\"submit\">Submit</button>\n</form>\n*/\n\nimport _ from 'lodash';\nconst STORAGE_KEY = \"feedback-form-state\";\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nlet toData = {};\nconst parsedDataLocal = load(STORAGE_KEY);\n\nconst refsToForm = {\n    form: document.querySelector('.feedback-form'),\n    textarea: document.querySelector('.feedback-form textarea'),\n    email: document.querySelector('.feedback-form input'),\n};\n\nonLoadForm();\nrefsToForm.form.addEventListener('submit', onFormSubmit);\nrefsToForm.form.addEventListener('input', _.throttle(onInput, 500));\nrefsToForm.form.addEventListener('input', e =>\n{ toData[e.target.name] = e.target.value; });\n\n\n\nfunction onFormSubmit(e) { \n    e.preventDefault();\n    console.log(parsedDataLocal);\n    e.currentTarget.reset();\n    localStorage.removeItem(STORAGE_KEY);\n}\nfunction onInput(e)\n{\n    return save(STORAGE_KEY, toData);\n}\n\nfunction onLoadForm() { \n    if (load(STORAGE_KEY))\n    {\n             \n        const outputForm = load(STORAGE_KEY);\n        const formKeys = Object.keys(outputForm);\n\n        formKeys.map(element => {\n            document.querySelector(`[name='${element}']`).value = outputForm[element];\n        });\n        //const savedForm = load(STORAGE_KEY);\n        //const formKeys = Object.keys(savedForm);\n        /*formKeys.map( element => {\n            document.querySelector(\n                `name='${element}'`\n            ).value = savedForm[element];\n        });*/\n\n        }\n}\n\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$load","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","$945622fd0f572e60$var$toData","$945622fd0f572e60$var$parsedDataLocal","$945622fd0f572e60$var$refsToForm","form","document","querySelector","textarea","email","outputForm","Object","keys","map","element","value","$945622fd0f572e60$var$onLoadForm","addEventListener","e","preventDefault","log","currentTarget","reset","removeItem","$parcel$interopDefault","throttle","stringify","setItem","$945622fd0f572e60$var$save","target","name"],"version":3,"file":"03-feedback.b86a5767.js.map"}